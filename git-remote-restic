#!/usr/bin/env bash
# second argument passed to the script
# represents the URL for the restic repo
export RESTIC_REPOSITORY=$2

readonly CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/git-remote-restic"
readonly CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/git-remote-restic"

# export env vars for restic
export RESTIC_PASSWORD="$(cat "${CONFIG_DIR}/restic-password")"
if [[ "${RESTIC_REPOSITORY}" == "s3:"* ]]; then
	export AWS_ACCESS_KEY_ID="$(cat "${CONFIG_DIR}/aws-access-key-id")"
	export AWS_SECRET_ACCESS_KEY="$(cat "${CONFIG_DIR}/aws-secret-access-key")"
fi

readonly ROOT_DIR="$(pwd)"
readonly LOCAL_GIT_DIR="${GIT_DIR}"
readonly HASH="$(echo $RESTIC_REPOSITORY | md5sum)"
readonly DECRYPTED_REMOTE_DIR="${CACHE_DIR}/${HASH%% *}"

# pull from remote restic
# need to remove all readonly objects locally first
# TODO: stop this, once these github issue get fixed:
# - https://github.com/restic/restic/issues/4757
# - https://github.com/restic/restic/issues/4575
readonly prev_opt="$(shopt -p | grep globstar)"
shopt -s globstar
for file in ${DECRYPTED_REMOTE_DIR}/**; do
	[[ -f $file ]] && [[ ! -w $file ]] && rm -rf $file
done
eval "${prev_opt}"
restic restore latest --target $DECRYPTED_REMOTE_DIR

while read line; do
	case $line in
	capabilities)
		echo "fetch"
		echo "push"
		echo ""
		;;
	list | list\ for-push)
		GIT_DIR=$DECRYPTED_REMOTE_DIR git show-ref
		echo ""
		;;
	fetch\ *)
		while read inner_line; do
			# if inner_line == ""
			[[ -z "${inner_line}" ]] && break
		done
		refspec="$(GIT_DIR=$LOCAL_GIT_DIR git config remote.origin.fetch)"
		GIT_DIR=$DECRYPTED_REMOTE_DIR git push $LOCAL_GIT_DIR $refspec
		echo ""
		;;
	push\ *)
		refspecs=("${line##push }")
		while read inner_line; do
			if [[ $inner_line == "push "* ]]; then
				refspecs+=("${inner_line##push }")
				continue
			fi
			break
		done
		for refspec in "${refspecs[@]}"; do
			GIT_DIR=$LOCAL_GIT_DIR git push $DECRYPTED_REMOTE_DIR $refspec
		done
		cd $DECRYPTED_REMOTE_DIR &&
			restic backup . >>/dev/null &&
			cd $ROOT_DIR
		for refspec in "${refspecs[@]}"; do
			dst="${refspec##*:}"
			echo "ok ${dst}"
		done
		echo ""
		;;
	*)
		exit 0
		;;
	esac
done
